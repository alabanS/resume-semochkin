const translations = {
  en: {
    name: "Ilya Semochkin",
    position: "Lead Systems Analyst / Architect",
    sections: {
      about: "üß† About Me",
      skills: "üõ† Key Skills",
      experience: "üíº Work Experience",
      education: "üéì Education & Courses",
      languages: "üåç Languages",
      extra: "‚ûï Additional Info"
    },
    contact: {
      title: "Systems Analyst / Solution Architect",
      details: "Man, 31 years old (born August 30, 1993)<br>üìç Moscow, Dmitrovskaya metro station<br>üìß <a href='mailto:semochkin.i@icloud.com'>semochkin.i@icloud.com</a><br>üìû +7 (915) 394-59-43<br>Ready to relocate, open to occasional business trips"
    },
    keyInfo: "7+ years of experience in system analysis and architecture. Specialization: e-commerce (marketplaces) and retail technologies, particularly PIM system design.",
    sidebar: {
      title: "Examples of artifacts",
      items: [
        "API-contracts",
        "PDM",
        "ER-diagram",
        "Sequence diagram"
      ]
    },
    experience: [
      {
        company: "Megamarket (megamarket.ru)",
        period: "March 2023 ‚Äî Present (2 years 5 months)",
        position: "Lead System Analyst",
        project: "Project: UTKA - MegaMarket's own PIM system for product catalog management",
        responsibilities: [
          "API and event contract design (REST/OpenAPI, Kafka, Avro/Protobuf)",
          "Architectural and process modeling (ADR, C4 diagrams, UML Sequence)",
          "Design of core UTKA services for 300M+ SKU",
          "Integration with OpenAI (ChatGPT) and Sber (GigaChat)",
          "Implementation of system analysis processes in the team"
        ],
        stack: "Stack: microservices, SOA, EDA, CQRS, PostgreSQL, Redis, ClickHouse, Elasticsearch, Kafka, gRPC, Camunda"
      },
      {
        company: "Digital League (digitalleague.ru)",
        period: "November 2021 ‚Äî February 2023 (1 year 4 months)",
        position: "System Analyst/Architect",
        project: "Project: Federal property management system for Rosimushchestvo",
        responsibilities: [
          "API contract design (REST, SOAP/WSDL)",
          "Database schema development and property object data model",
          "Business process configuration (Camunda) and ETI processes (Talend)",
          "CI/CD practices implementation (GitLab, Jenkins)"
        ],
        stack: "Stack: PostgreSQL, RabbitMQ, Jenkins, Camunda, Talend, OpenAM, Python"
      }
    ],
    skills: [
      "Architecture: Microservices, SOA, EDA, CQRS, Saga",
      "Notations: BPMN, UML, C4, ERD",
      "Integrations: REST, Kafka, gRPC, RabbitMQ",
      "Databases: PostgreSQL, Redis, ClickHouse, Elasticsearch",
      "DevOps: Docker, Kubernetes, GitLab CI/CD, Jenkins",
      "API: OpenAPI/Swagger, CloudEvents",
      "Tools: Jira, Confluence, draw.io, Camunda",
      "Programming: Python, SQL, Golang",
      "Soft skills: Facilitation, review, interviewing, mentoring"
    ],
    education: {
      university: "Russian State University of Oil and Gas named after I.M. Gubkin",
      degree: "Master's degree, Automation and Computer Engineering, Instrumentation",
      year: "2017",
      courses: [
        "Python: basics and application (Bioinformatics Institute, 2021)",
        "Data analysis in SQL (ANO DPO \"Training Center RRS\", 2021)",
        "Art of presentation (Moscow Business School, 2021)",
        "SQL basics (Shultais Education, 2021)"
      ]
    },
    languages: [
      "Russian ‚Äî Native",
      "English ‚Äî A1 (Beginner)",
      "German ‚Äî A1 (Beginner)"
    ],
    additional: [
      "Open to remote work",
      "Mentoring experience",
      "Hobbies: sports, video editing",
      "Example API Documentation"
    ]
  },
  ru: {
    name: "–°–µ–º–æ—á–∫–∏–Ω –ò–ª—å—è",
    position: "C–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ /Solution Architec",
    sections: {
      about: "üß† –û–±–æ –º–Ω–µ",
      skills: "üõ† –ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏",
      experience: "üíº –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã",
      education: "üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –∫—É—Ä—Å—ã",
      languages: "üåç –Ø–∑—ã–∫–∏",
      extra: "‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"
    },
    contact: {
      title: "C–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ /Solution Architec",
      details: "–ú—É–∂—á–∏–Ω–∞, 31 –≥–æ–¥ (—Ä–æ–¥–∏–ª—Å—è 30 –∞–≤–≥—É—Å—Ç–∞ 1993)<br>üìç –ú–æ—Å–∫–≤–∞, –º. –î–º–∏—Ç—Ä–æ–≤—Å–∫–∞—è<br>üìß <a href='mailto:semochkin.i@icloud.com'>semochkin.i@icloud.com</a><br>üìû +7 (915) 394-59-43<br>–ì–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–µ–∑–¥—É, –≥–æ—Ç–æ–≤ –∫ —Ä–µ–¥–∫–∏–º –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞–º"
    },
    keyInfo: "7+ –ª–µ—Ç –æ–ø—ã—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: e-commerce (–º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã) –∏ —Ä–∏—Ç–µ–π–ª-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PIM-—Å–∏—Å—Ç–µ–º.",
    sidebar: {
      title: "–ü—Ä–∏–º–µ—Ä—ã –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤",
      items: [
        "API-contracts",
        "PDM",
        "ER-diagram",
        "Sequence diagram"
      ]
    },
    experience: [
      {
        company: "–ú–µ—Ç–∞–º–∞—Ä–∫–µ—Ç (megamarket.ru)",
        period: "–ú–∞—Ä—Ç 2023 ‚Äî –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è (2 –≥–æ–¥–∞ 5 –º–µ—Å—è—Ü–µ–≤)",
        position: "–í–µ–¥—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫",
        project: "–ü—Ä–æ–µ–∫—Ç: UTKA - —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è PIM-—Å–∏—Å—Ç–µ–º–∞ –ú–µ–≥–∞ –ú–∞—Ä–∫–µ—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–Ω—ã–º –∫–∞—Ç–∞–ª–æ–≥–æ–º",
        responsibilities: [
          "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∏ —Å–æ–±—ã—Ç–∏–π–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ (REST/OpenAPI, Kafka, Avro/Protobuf)",
          "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ –∏ –ø—Ä–æ—Ü–µ—Å—Å–Ω–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (ADR, C4-–¥–∏–∞–≥—Ä–∞–º–º—ã, UML Sequence)",
          "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ UTKA –¥–ª—è 300M+ SKU",
          "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å OpenAI (ChatGPT) –∏ Sber (GigaChat)",
          "–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤ –∫–æ–º–∞–Ω–¥–µ"
        ],
        stack: "–°—Ç–µ–∫: –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã, SOA, EDA, CQRS, PostgreSQL, Redis, ClickHouse, Elasticsearch, Kafka, gRPC, Camunda"
      },
      {
        company: "–õ–∏–≥–∞ –¶–∏—Ñ—Ä–æ–≤–æ–π –≠–∫–æ–Ω–æ–º–∏–∫–∏ (digitalleague.ru)",
        period: "–ù–æ—è–±—Ä—å 2021 ‚Äî –§–µ–≤—Ä–∞–ª—å 2023 (1 –≥–æ–¥ 4 –º–µ—Å—è—Ü–∞)",
        position: "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫/–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä",
        project: "–ü—Ä–æ–µ–∫—Ç: –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∏–º—É—â–µ—Å—Ç–≤–æ–º –¥–ª—è –†–æ—Å–∏–º—É—â–µ—Å—Ç–≤–∞",
        responsibilities: [
          "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ (REST, SOAP/WSDL)",
          "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å—Ö–µ–º –ë–î –∏ –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏–º—É—â–µ—Å—Ç–≤–∞",
          "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (Camunda) –∏ ETI-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (Talend)",
          "–í–Ω–µ–¥—Ä–µ–Ω–∏–µ CI/CD-–ø—Ä–∞–∫—Ç–∏–∫ (GitLab, Jenkins)"
        ],
        stack: "–°—Ç–µ–∫: PostgreSQL, RabbitMQ, Jenkins, Camunda, Talend, OpenAM, Python"
      }
    ],
    skills: [
      "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: Microservices, SOA, EDA, CQRS, Saga",
      "–ù–æ—Ç–∞—Ü–∏–∏: BPMN, UML, C4, ERD",
      "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: REST, Kafka, gRPC, RabbitMQ",
      "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: PostgreSQL, Redis, ClickHouse, Elasticsearch",
      "DevOps: Docker, Kubernetes, GitLab CI/CD, Jenkins",
      "API: OpenAPI/Swagger, CloudEvents",
      "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: Jira, Confluence, draw.io, Camunda",
      "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ: Python, SQL, Golang",
      "Soft skills: —Ñ–∞—Å–∏–ª–∏—Ç–∞—Ü–∏—è, —Ä–µ–≤—å—é, –∏–Ω—Ç–µ—Ä–≤—å—é, –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ"
    ],
    education: {
      university: "–†–æ—Å—Å–∏–π—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –Ω–µ—Ñ—Ç–∏ –∏ –≥–∞–∑–∞ –∏–º. –ò.–ú. –ì—É–±–∫–∏–Ω–∞",
      degree: "–ú–∞–≥–∏—Å—Ç—Ä, –ê–≤—Ç–æ–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞, –ü—Ä–∏–±–æ—Ä–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ",
      year: "2017 –≥–æ–¥",
      courses: [
        "Python: –æ—Å–Ω–æ–≤—ã –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ (Bioinformatics Institute, 2021)",
        "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —è–∑—ã–∫–µ SQL (–ê–ù–û –î–ü–û \"–£—á–µ–±–Ω—ã–π —Ü–µ–Ω—Ç—Ä –†–†–°\", 2021)",
        "–ò—Å–∫—É—Å—Å—Ç–≤–æ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ (Moscow Business School, 2021)",
        "–û—Å–Ω–æ–≤—ã SQL (Shultais Education, 2021)"
      ]
    },
    languages: [
      "–†—É—Å—Å–∫–∏–π ‚Äî –†–æ–¥–Ω–æ–π",
      "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π ‚Äî A1 (–Ω–∞—á–∞–ª—å–Ω—ã–π)",
      "–ù–µ–º–µ—Ü–∫–∏–π ‚Äî A1 (–Ω–∞—á–∞–ª—å–Ω—ã–π)"
    ],
    additional: [
      "–ì–æ—Ç–æ–≤ –∫ —É–¥–∞–ª–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ",
      "–û–ø—ã—Ç –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–∞",
      "–•–æ–±–±–∏: —Å–ø–æ—Ä—Ç, –≤–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂",
      "–ü—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API"
    ]
  }
};

let currentLang = "ru";

document.getElementById("langSwitch").addEventListener("click", () => {
  currentLang = currentLang === "ru" ? "en" : "ru";
  updateLang();
});

function updateLang() {
  const lang = translations[currentLang];

  // –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
  document.querySelector("[data-lang='name']").textContent = lang.name;

  // –°–µ–∫—Ü–∏–∏ –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞
  document.querySelectorAll("[data-lang-section]").forEach(section => {
    const key = section.getAttribute("data-lang-section");
    section.querySelector("button").innerHTML = lang.sections[key];
  });

  // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
  document.getElementById("langSwitch").textContent =
    currentLang === "ru" ? "Switch to English üåê" : "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–∏–π üåê";

  // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  const contact = document.querySelector(".contact");
  contact.innerHTML = `
    <strong>${lang.contact.title}</strong><br>
    ${lang.contact.details}
  `;

  // –ö–ª—é—á–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  document.querySelector("[data-lang='keyInfoTitle']").textContent = currentLang === "ru" ? "–ö–ª—é—á–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" : "Core Expertise";
  document.querySelector("[data-lang='keyInfoText']").textContent = lang.keyInfo;

  // –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
  const experienceContainer = document.querySelector(".experience-container");
  experienceContainer.innerHTML = lang.experience.map(exp => `
    <div class="experience-item">
      <h3>${exp.company}</h3>
      <p class="experience-period">${exp.period}</p>
      <p><strong>${exp.position}</strong></p>
      <p>${exp.project}</p>
      <ul>
        ${exp.responsibilities.map(resp => `<li>${resp}</li>`).join("")}
      </ul>
      <p><strong>${currentLang === "ru" ? "–°—Ç–µ–∫:" : "Stack:"}</strong> ${exp.stack}</p>
    </div>
  `).join("");

  // –ù–∞–≤—ã–∫–∏
  const skillsList = document.querySelector(".skills-list");
  skillsList.innerHTML = lang.skills.map(skill => {
    const [category, value] = skill.split(":");
    return `<li><strong>${category}:</strong>${value}</li>`;
  }).join("");

  // –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
  const educationPanel = document.querySelector(".education-panel");
  educationPanel.innerHTML = `
    <h3>${lang.education.university}</h3>
    <p>${lang.education.degree}</p>
    <p>${lang.education.year}</p>
    <h3>${currentLang === "ru" ? "–ö—É—Ä—Å—ã" : "Courses"}</h3>
    <ul>
      ${lang.education.courses.map(course => `<li>${course}</li>`).join("")}
    </ul>
  `;

  // –Ø–∑—ã–∫–∏
  const languagesList = document.querySelector(".languages-list");
  languagesList.innerHTML = lang.languages.map(lang => `<li>${lang}</li>`).join("");

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  const additionalList = document.querySelector(".additional-list");
  additionalList.innerHTML = lang.additional.map((item, i) => {
    if (i === lang.additional.length - 1) {
      return `<li><a href="https://alabans.github.io/resume-semochkin/api/api-docs.html" target="_blank" class="doc-button">${item}</a></li>`;
    }
    return `<li>${item}</li>`;
  }).join("");
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener("DOMContentLoaded", () => {
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  const mainContent = document.querySelector(".main-content");

  // –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
  const experienceSection = document.querySelector("[data-lang-section='experience']");
  experienceSection.querySelector(".panel").classList.add("experience-container");

  // –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
  const educationSection = document.querySelector("[data-lang-section='education']");
  educationSection.querySelector(".panel").classList.add("education-panel");

  // –ù–∞–≤—ã–∫–∏
  const skillsSection = document.querySelector("[data-lang-section='skills']");
  skillsSection.querySelector("ul").classList.add("skills-list");

  // –Ø–∑—ã–∫–∏
  const languagesSection = document.querySelector("[data-lang-section='languages']");
  languagesSection.querySelector("ul").classList.add("languages-list");

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
  const additionalSection = document.querySelector("[data-lang-section='extra']");
  additionalSection.querySelector("ul").classList.add("additional-list");

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥
  updateLang();
});
